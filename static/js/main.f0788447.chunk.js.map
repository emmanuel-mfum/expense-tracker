{"version":3,"sources":["Components/UI/Card.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","removeForm","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","currentYear","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0788447.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n\r\n    const selectHandler = (event) =>{\r\n        //console.log(event.target.value);\r\n\r\n        props.onChangeFilter(event.target.value);\r\n\r\n    }\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={selectHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nimport \"./ExpenseItem.css\";\r\n\r\n// useState allows us to define values as state where changes to these values should\r\n//reflect in the component function being called again.\r\nconst ExpenseItem = (props) => {\r\n  //function clickHandler(){}\r\n  //const [title, setTitle] = useState(props.title); // first element is a pointer to that managed value (useState doesn't re-initialize)\r\n  // the second is a function that we can call to set a new title\r\n\r\n  //const clickHandler = () => {\r\n  //setTitle('Updated'); // this doesn't just assign a new value it will call again by React the function component\r\n  // the value isn't changed right away, but scheduled for change\r\n  //.log(title);\r\n\r\n  //};\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css'\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n\r\n    \r\n   // we can store JSX code inside variables !\r\n\r\n\r\n  // If your component entirely changes based\r\n  // on some different conditions., we can return a different JSX block if  some condition is met.\r\n\r\n  if(props.items.length === 0){\r\n      return <h2 className='expenses-list__fallback'> Found no expenses</h2> // conditional return statement, we return  adiffere\r\n  }\r\n\r\n  return <ul className=\"expenses-list\">\r\n      {props.items.map((\r\n      expense // the map function takes a function an apply it on every element of an array\r\n    ) => (\r\n      <ExpenseItem\r\n        key={expense.id} // we need keys in rendering a list of components for React to identify individual items\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ))}\r\n\r\n  </ul>\r\n\r\n\r\n}\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0){ // check if our max is greater than 0\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'; // the percentage for which the bar should be filled\r\n\r\n    }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues); // pulls out all the array elements and add them as standalone arguments\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n\r\n    const chartDataPoints = [\r\n        {label:'Jan', value:0},\r\n        {label:'Feb', value:0},\r\n        {label:'Mar', value:0},\r\n        {label:'Apr', value:0},\r\n        {label:'May', value:0},\r\n        {label:'Jun', value:0},\r\n        {label:'Jul', value:0},\r\n        {label:'Aug', value:0},\r\n        {label:'Sep', value:0},\r\n        {label:'Oct', value:0},\r\n        {label:'Nov', value:0},\r\n        {label:'Dec', value:0}\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth(); // starting at 0 (January)\r\n        chartDataPoints[expenseMonth].value += expense.amount; // we increase the value of a given month by the expense amount\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n\r\n\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    //console.log(selectedYear);\r\n\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(\r\n    // simple filtering transformation\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n\r\n        <ExpensesList items={filteredExpenses}/>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, {useState} from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('') // state variable and update function for the title\r\n    const[enteredAmount, setEnteredAmount] = useState('') // state variable and update function for the amount\r\n    const[enteredDate, setEnteredDate] = useState('') // state variable and update function for the date\r\n\r\n    // const [userInput, setUserInput ] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount : '',\r\n    //     enteredDate: ''\r\n\r\n    // });\r\n\r\n    const titleChangeHandler = (event) =>{ // every event listened to in JS can be tapped into\r\n        setEnteredTitle(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTitle:event.target.value,\r\n        // })\r\n        // setUserInput((prevState) => { // whenever our state depends on the previous state\r\n        //     return {...prevState, enteredTitle: event.target.value}\r\n        // })\r\n    };\r\n\r\n    const amountChangeHandler = (event)=>{\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount:event.target.value\r\n        // })\r\n    };\r\n\r\n    const dateChangeHandler = (event)=>{\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredDate:event.target.value,\r\n        // })\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault(); // prevents default of sending request to development server\r\n        \r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount:+enteredAmount,\r\n            date:new Date(enteredDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData); // executing a function from an above component here\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n          <button onClick={props.removeForm}>Cancel</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"./NewExpense.css\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData); // forward the enriched data above to App.js\r\n    setIsEditing(false);\r\n  \r\n};\r\n\r\n  const toggleForm = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const disableForm = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  // We want to render this form conditionally either a button or a form\r\n\r\n  if (isEditing === false) {\r\n    return (\r\n      <div className=\" new-expense\">\r\n        <button onClick={toggleForm}>Add New Expense</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm\r\n        removeForm={disableForm}\r\n        onSaveExpenseData={saveExpenseDataHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, {useState} from 'react';\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from './Components/NewExpense/NewExpense';\n\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\nconst App = () => {\n  \n  const [expenses, setExpenses]= useState(DUMMY_EXPENSES); // initally the expenses are set with the list above\n\n  const addExpenseHandler = expense => { // updates our state based on the previous snapshot of that state\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n  let currentDate = new Date();\n  let currentYear = currentDate.getFullYear()\n\n  // return React.createElement('div,React.createElement(h2, {}, \"Let's start\")..)\n  \n  \n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses}/>\n      <p id=\"copyright\"> Made by Emmanuel Mfumuangani , {currentYear}</p>\n\n    </div>\n   \n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}